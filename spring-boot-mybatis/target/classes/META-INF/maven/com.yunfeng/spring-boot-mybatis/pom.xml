<?xml version="1.0" encoding="UTF-8"?>  
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
    <modelVersion>4.0.0</modelVersion>  
    <groupId>com.yunfeng</groupId>  
    <artifactId>spring-boot-mybatis</artifactId>  
    <version>0.0.1-SNAPSHOT</version>  
    <name>spring-boot-mybatis</name>
    <!-- Inherit defaults from Spring Boot -->  
    <parent>  
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-starter-parent</artifactId>  
       <!--  <version>1.4.0.BUILD-SNAPSHOT</version> -->
        <version>1.4.2.RELEASE</version>
    </parent>  
  	<properties>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<java-version>1.8</java-version>
  	</properties>
  	
    <!-- Add typical dependencies for a web application -->  
    <dependencies>  
    
        <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-web</artifactId>  
            <!-- 不需要version 会根据parent版本进行添加上-->
        </dependency> 
        <!-- 添加fastjson  支持 -->
         <dependency>  
            <groupId>com.alibaba</groupId>  
            <artifactId>fastjson</artifactId>  
            <version>1.2.15</version>
        </dependency> 
        
        
        <!-- 热部署 org.springframework.devtools 依赖包
        	1、修改类
        	2、修改配置文件
        	3、修改页面
        	上述保存，应用会重启， 页面刷新
        	原理：spring.thymeleaf.cache设为false
        	会监听classpath下的类变化 和配置文件 页面的变化。
        	要确定eclipse是否开启Buil Automatically
        	如果设置了springApplication.setRegisterShutdownHook(false)
         -->
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-devtools</artifactId>
        	<optional>true</optional>
        	<scope>true</scope>
        </dependency>
        

        
        <dependency>
        	<groupId>mysql</groupId>
        	<artifactId>mysql-connector-java</artifactId>
        </dependency>
        
        <!-- 不要使用1.00因为还不支持拦截器  使用最新版本即可 -->
        <dependency>
        	<groupId>org.mybatis.spring.boot</groupId>
        	<artifactId>mybatis-spring-boot-starter</artifactId>
        	<version>1.1.1</version>
        </dependency>
        
        <dependency>
        	<groupId>com.github.pagehelper</groupId>
        	<artifactId>pagehelper</artifactId>
        	<version>4.1.0</version>
        </dependency>
        
        
        
        <!-- 使用thymeleaf模板  -->
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
       
         
         <!-- 使用freemaker模板 -->
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
         
    </dependencies>  
  
    <!-- Package as an executable jar -->  
    <build>  
        
          <plugins>
          
          	 <plugin>  
                <groupId>org.springframework.boot</groupId>  
                <artifactId>spring-boot-maven-plugin</artifactId>  
                <configuration>
                	<!-- fork 不配置这个devtool 不会起作用，不会自启动 -->
                	<fork>true</fork>
                </configuration>
            </plugin>  
             <plugin>  
                    <groupId>org.apache.maven.plugins</groupId>  
                    <artifactId>maven-compiler-plugin</artifactId>  
                    <configuration>  
                        <source>1.8</source>  
                        <target>1.8</target>  
                    </configuration>  
              </plugin> 
          <!-- 
        	在这里添加springLoader plugin 实现热拔插开发  
        	1、run as maven build   里面配置 goal:  spring-boot:run
        	问题控制台maven重启会报错：Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.
        	一般不用这种。关闭还会占用端口
        	2、run as -java application 需要把springloaded-1.2.3.RELEASE.jar下载下来。放在工程目录下
        	然后run-config设置jvm 参数  -javaagent:.\lib\springloaded-1.2.3.RELEASE.jar -noverify
         -->
            <!-- <plugin>  
                <groupId>org.springframework.boot</groupId>  
                <artifactId>spring-boot-maven-plugin</artifactId>  
                <dependencies>
                	<dependency>
                		<groupId>org.springframework</groupId>
                		<artifactId>springloaded</artifactId>
                		<version>1.2.3.RELEASE</version>
                	</dependency>
                </dependencies>
                <executions>
                	<execution>
                		<goals>
                			<goal>repackage</goal>
                		</goals>
                	</execution>
                	
                </executions>
                <configuration>
                	<classifier>exec</classifier>
                </configuration>
            </plugin> -->  
            
            
            
            
            
        </plugins>  
    </build>  
  
    <!-- Add Spring repositories -->  
    <!-- (you don't need this if you are using a .RELEASE version) -->  
    <!-- <repositories>  
        <repository>  
            <id>spring-snapshots</id>  
            <url>http://repo.spring.io/snapshot</url>  
            <snapshots><enabled>true</enabled></snapshots>  
        </repository>  
        <repository>  
            <id>spring-milestones</id>  
            <url>http://repo.spring.io/milestone</url>  
        </repository>  
    </repositories>  
    <pluginRepositories>  
        <pluginRepository>  
            <id>spring-snapshots</id>  
            <url>http://repo.spring.io/snapshot</url>  
        </pluginRepository>  
        <pluginRepository>  
            <id>spring-milestones</id>  
            <url>http://repo.spring.io/milestone</url>  
        </pluginRepository>  
    </pluginRepositories>   -->
</project>  