#属性占位符
#例如：
#app.name=MyApp
#app.description=${app.name} is a Spring Boot application
#可以在配置文件中引用前面配置过的属性（优先级前面配置过的这里都能用）。
#通过如${app.name:默认名称}方法还可以设置默认值，当找不到引用的属性时，会使用默认的属性。
#由于${}方式会被Maven处理。如果你pom继承的spring-boot-starter-parent，Spring Boot 已经将maven-resources-plugins默认的${}方式改为了@ @方式，例如spring-boot-configuration。
#
#如果你是引入的Spring Boot，你可以修改使用其他的分隔符
#通过属性占位符还能缩短命令参数
#例如修改web默认端口需要使用--server.port=9090方式，如果在配置中写上：
#server.port=${port:8080}
#那么就可以使用更短的--port=9090，当不提供该参数的时候使用默认值8080。
com.yf.name=yunfeng
com.yf.title=学习springboot
com.yf.desc=${com.yf.name}正在${com.yf.title}

# 随机字符串  32位 33b1f7c42118eead33cc6194bad0e26e
com.yf.value=${random.value}
# 随机int 1405152412
com.yf.number=${random.int}
# 随机long 7589142432441180649
com.yf.bignumber=${random.long}
# 10以内的随机数
com.yf.test1=${random.int(10)}
# 10-20的随机数
com.yf.test2=${random.int[10,20]}

# 多环境配置文件激活属性 Tomcat started on port(s): 1111 (http)
spring.profiles.active=dev